<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUs" xml:space="preserve">
    <value>About us</value>
  </data>
  <data name="AboutUsText" xml:space="preserve">
    <value>Welcome to MyQuickDesk - a web application created by Diana, Marek, Adrian, Piotr and Mariusz as part of the InfoShare Academy project! Now you can easily book hotdesks in a simple and convenient way.</value>
  </data>
  <data name="AboutUsText2" xml:space="preserve">
    <value>Thanks to MyQuickDesk, you will forget about unnecessary stress related to searching for an available place to work. Our app allows you to quickly and intuitively book the hotdesk that best suits your needs.</value>
  </data>
  <data name="AboutUsText3" xml:space="preserve">
    <value>Whether it's a short meeting with a client, an intense programming session or just a moment of creativity - MyQuickDesk is the perfect tool to organize your workplace. Thanks to flexible booking options, you can adjust the schedule to your schedule.</value>
  </data>
  <data name="AboutUsText4" xml:space="preserve">
    <value>Join our web application and experience a new quality of workplace management. We are waiting for you at MyQuickDesk!</value>
  </data>
  <data name="AboutUsText5" xml:space="preserve">
    <value>MyQuickDesk team</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="AdminPanel" xml:space="preserve">
    <value>Admin panel</value>
  </data>
  <data name="AnError" xml:space="preserve">
    <value>An error occurred while processing your request.</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure you want to delete the</value>
  </data>
  <data name="AreYouSure?" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="BookHotdesk" xml:space="preserve">
    <value>Book hotdesk</value>
  </data>
  <data name="BookNow" xml:space="preserve">
    <value>Book now</value>
  </data>
  <data name="BookRoom" xml:space="preserve">
    <value>Book conferencial room</value>
  </data>
  <data name="Charger" xml:space="preserve">
    <value>Charger</value>
  </data>
  <data name="ConferencialRoom" xml:space="preserve">
    <value>Conferencial room</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create new</value>
  </data>
  <data name="CreateNewRole" xml:space="preserve">
    <value>Create new role</value>
  </data>
  <data name="CreateNewRoom" xml:space="preserve">
    <value>Create new</value>
  </data>
  <data name="CreateReservation" xml:space="preserve">
    <value>Create new reservation</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteRole" xml:space="preserve">
    <value>Delete role</value>
  </data>
  <data name="DeleteUser" xml:space="preserve">
    <value>Delete user</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Desk" xml:space="preserve">
    <value>Desk</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="DevelopmentMode" xml:space="preserve">
    <value>Development mode</value>
  </data>
  <data name="DevErrorTExt1" xml:space="preserve">
    <value>Swapping to development environment will display more detailed information about the error that occurred.</value>
  </data>
  <data name="DevErrorTExt2" xml:space="preserve">
    <value>The Development environment shouldn't be enabled for deployed applications.</value>
  </data>
  <data name="DevErrorTExt3" xml:space="preserve">
    <value>It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the development environment by setting the ASPNETCORE_ENVIRONMENT  environment variable to development
    and restarting the app.</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditRole" xml:space="preserve">
    <value>Edit role</value>
  </data>
  <data name="EditUser" xml:space="preserve">
    <value>Edit user</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>EmIail</value>
  </data>
  <data name="EndTime" xml:space="preserve">
    <value>End time</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorReservationConflict" xml:space="preserve">
    <value>The reservation conflicts with existing bookings. Please choose a different time slot.</value>
  </data>
  <data name="Forgot" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="HandicappedSpot" xml:space="preserve">
    <value>Handicapped spot</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello </value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="IDontHave" xml:space="preserve">
    <value>I don't have an account yet</value>
  </data>
  <data name="IsAvaiable" xml:space="preserve">
    <value>Is avaiable?</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginBook" xml:space="preserve">
    <value>Login to Book</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="MaxCapacity" xml:space="preserve">
    <value>Max capacity</value>
  </data>
  <data name="Myreservations" xml:space="preserve">
    <value>My reservations</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ParkingSpot" xml:space="preserve">
    <value>Parking Spot</value>
  </data>
  <data name="PleaseConfirm" xml:space="preserve">
    <value>Please confirm your password.</value>
  </data>
  <data name="PleaseEnter" xml:space="preserve">
    <value>Please enter your password.</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterNew" xml:space="preserve">
    <value>Register as a new user.</value>
  </data>
  <data name="Resend" xml:space="preserve">
    <value>Resend email confirmation.</value>
  </data>
  <data name="Reservation" xml:space="preserve">
    <value>Reservation</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="RoleName" xml:space="preserve">
    <value>Role name</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>Start time</value>
  </data>
  <data name="TakeBack" xml:space="preserve">
    <value>No, take me back.</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="WhatIs" xml:space="preserve">
    <value>What is MyQuickDesk?</value>
  </data>
  <data name="YesDelete" xml:space="preserve">
    <value>Yes, delete it.</value>
  </data>
</root>